{"version":3,"sources":["../node_modules/browser-pack/_prelude.js","jsonlint.js","../lib/jsonlint.js"],"names":["r","e","n","t","o","i","f","c","require","u","a","Error","code","p","exports","call","length","1","module","parser","lexer","jsonlint","trace","yy","symbols_","error","JSONString","STRING","JSONNumber","NUMBER","JSONNullLiteral","NULL","JSONBooleanLiteral","TRUE","FALSE","JSONText","JSONValue","EOF","JSONObject","JSONArray","{","}","JSONMemberList","JSONMember",":",",","[","]","JSONElementList","$accept","$end","terminals_","2","4","6","8","10","11","14","17","18","21","22","23","24","productions_","performAction","yytext","yyleng","yylineno","yystate","$$","_$","$0","this","$","replace","Number","push","table","3","5","7","9","12","13","15","16","19","20","25","defaultActions","parseError","str","hash","parse","input","self","stack","vstack","lstack","recovering","setInput","yylloc","yyloc","lex","token","symbol","preErrorSymbol","state","action","len","newState","expected","yyval","errStr","showPosition","join","text","match","line","loc","toString","Array","first_line","last_line","first_column","last_column","slice","_input","_more","_less","done","matched","conditionStack","ch","unput","more","less","pastInput","past","substr","upcomingInput","next","pre","tempMatch","index","lines","rules","_currentRules","options","flex","begin","condition","popState","pop","conditions","topState","pushState","yy_","$avoiding_name_collisions","YY_START","INITIAL","inclusive","window"],"mappings":"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","file":"jsonlint.min.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","// Forked to export as window and/or module - See bottom\n// Original in /vendor/jsonlint.js\n\n/* Jison generated parser */\nvar jsonlint = (function(){\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"JSONString\":3,\"STRING\":4,\"JSONNumber\":5,\"NUMBER\":6,\"JSONNullLiteral\":7,\"NULL\":8,\"JSONBooleanLiteral\":9,\"TRUE\":10,\"FALSE\":11,\"JSONText\":12,\"JSONValue\":13,\"EOF\":14,\"JSONObject\":15,\"JSONArray\":16,\"{\":17,\"}\":18,\"JSONMemberList\":19,\"JSONMember\":20,\":\":21,\",\":22,\"[\":23,\"]\":24,\"JSONElementList\":25,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"STRING\",6:\"NUMBER\",8:\"NULL\",10:\"TRUE\",11:\"FALSE\",14:\"EOF\",17:\"{\",18:\"}\",21:\":\",22:\",\",23:\"[\",24:\"]\"},\nproductions_: [0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: // replace escaped characters with actual character\n          this.$ = yytext.replace(/\\\\(\\\\|\")/g, \"$\"+\"1\")\n                     .replace(/\\\\n/g,'\\n')\n                     .replace(/\\\\r/g,'\\r')\n                     .replace(/\\\\t/g,'\\t')\n                     .replace(/\\\\v/g,'\\v')\n                     .replace(/\\\\f/g,'\\f')\n                     .replace(/\\\\b/g,'\\b');\n\nbreak;\ncase 2:this.$ = Number(yytext);\nbreak;\ncase 3:this.$ = null;\nbreak;\ncase 4:this.$ = true;\nbreak;\ncase 5:this.$ = false;\nbreak;\ncase 6:return this.$ = $$[$0-1];\nbreak;\ncase 13:this.$ = {};\nbreak;\ncase 14:this.$ = $$[$0-1];\nbreak;\ncase 15:this.$ = [$$[$0-2], $$[$0]];\nbreak;\ncase 16:this.$ = {}; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 17:this.$ = $$[$0-2]; $$[$0-2][$$[$0][0]] = $$[$0][1];\nbreak;\ncase 18:this.$ = [];\nbreak;\ncase 19:this.$ = $$[$0-1];\nbreak;\ncase 20:this.$ = [$$[$0]];\nbreak;\ncase 21:this.$ = $$[$0-2]; $$[$0-2].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],12:1,13:2,15:7,16:8,17:[1,14],23:[1,15]},{1:[3]},{14:[1,16]},{14:[2,7],18:[2,7],22:[2,7],24:[2,7]},{14:[2,8],18:[2,8],22:[2,8],24:[2,8]},{14:[2,9],18:[2,9],22:[2,9],24:[2,9]},{14:[2,10],18:[2,10],22:[2,10],24:[2,10]},{14:[2,11],18:[2,11],22:[2,11],24:[2,11]},{14:[2,12],18:[2,12],22:[2,12],24:[2,12]},{14:[2,3],18:[2,3],22:[2,3],24:[2,3]},{14:[2,4],18:[2,4],22:[2,4],24:[2,4]},{14:[2,5],18:[2,5],22:[2,5],24:[2,5]},{14:[2,1],18:[2,1],21:[2,1],22:[2,1],24:[2,1]},{14:[2,2],18:[2,2],22:[2,2],24:[2,2]},{3:20,4:[1,12],18:[1,17],19:18,20:19},{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],13:23,15:7,16:8,17:[1,14],23:[1,15],24:[1,21],25:22},{1:[2,6]},{14:[2,13],18:[2,13],22:[2,13],24:[2,13]},{18:[1,24],22:[1,25]},{18:[2,16],22:[2,16]},{21:[1,26]},{14:[2,18],18:[2,18],22:[2,18],24:[2,18]},{22:[1,28],24:[1,27]},{22:[2,20],24:[2,20]},{14:[2,14],18:[2,14],22:[2,14],24:[2,14]},{3:20,4:[1,12],20:29},{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],13:30,15:7,16:8,17:[1,14],23:[1,15]},{14:[2,19],18:[2,19],22:[2,19],24:[2,19]},{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],13:31,15:7,16:8,17:[1,14],23:[1,15]},{18:[2,17],22:[2,17]},{18:[2,15],22:[2,15]},{22:[2,21],24:[2,21]}],\ndefaultActions: {16:[2,6]},\nparseError: function parseError(str, hash) {\n    throw new Error(str);\n},\nparse: function parse(input) {\n    var self = this,\n        stack = [0],\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    if (typeof this.lexer.yylloc == 'undefined')\n        this.lexer.yylloc = {};\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n\n    if (typeof this.yy.parseError === 'function')\n        this.parseError = this.yy.parseError;\n\n    function popStack (n) {\n        stack.length = stack.length - 2*n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n    function lex() {\n        var token;\n        token = self.lexer.lex() || 1; // $end = 1\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length-1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol == null)\n                symbol = lex();\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n        // handle parse error\n        _handle_error:\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n\n            if (!recovering) {\n                // Report error\n                expected = [];\n                for (p in table[state]) if (this.terminals_[p] && p > 2) {\n                    expected.push(\"'\"+this.terminals_[p]+\"'\");\n                }\n                var errStr = '';\n                if (this.lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+this.lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + this.terminals_[symbol]+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == 1 /*EOF*/ ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr,\n                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol == EOF) {\n                    throw new Error(errStr || 'Parsing halted.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            while (1) {\n                // check for error recovery rule in this state\n                if ((TERROR.toString()) in table[state]) {\n                    break;\n                }\n                if (state == 0) {\n                    throw new Error(errStr || 'Parsing halted.');\n                }\n                popStack(1);\n                state = stack[stack.length-1];\n            }\n\n            preErrorSymbol = symbol; // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(this.lexer.yytext);\n                lstack.push(this.lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = this.lexer.yyleng;\n                    yytext = this.lexer.yytext;\n                    yylineno = this.lexer.yylineno;\n                    yyloc = this.lexer.yylloc;\n                    if (recovering > 0)\n                        recovering--;\n                } else { // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2: // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3: // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n/* Jison generated lexer */\nvar lexer = (function(){\nvar lexer = ({EOF:1,\nparseError:function parseError(str, hash) {\n        if (this.yy.parseError) {\n            this.yy.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._less = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n        return this;\n    },\ninput:function () {\n        var ch = this._input[0];\n        this.yytext+=ch;\n        this.yyleng++;\n        this.match+=ch;\n        this.matched+=ch;\n        var lines = ch.match(/\\n/);\n        if (lines) this.yylineno++;\n        this._input = this._input.slice(1);\n        return ch;\n    },\nunput:function (ch) {\n        this._input = ch + this._input;\n        return this;\n    },\nmore:function () {\n        this._more = true;\n        return this;\n    },\nless:function (n) {\n        this._input = this.match.slice(n) + this._input;\n    },\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n    },\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n    },\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) this.done = true;\n\n        var token,\n            match,\n            tempMatch,\n            index,\n            col,\n            lines;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i=0;i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (!this.options.flex) break;\n            }\n        }\n        if (match) {\n            lines = match[0].match(/\\n.*/g);\n            if (lines) this.yylineno += lines.length;\n            this.yylloc = {first_line: this.yylloc.last_line,\n                           last_line: this.yylineno+1,\n                           first_column: this.yylloc.last_column,\n                           last_column: lines ? lines[lines.length-1].length-1 : this.yylloc.last_column + match[0].length}\n            this.yytext += match[0];\n            this.match += match[0];\n            this.yyleng = this.yytext.length;\n            this._more = false;\n            this._input = this._input.slice(match[0].length);\n            this.matched += match[0];\n            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n            if (this.done && this._input) this.done = false;\n            if (token) return token;\n            else return;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                    {text: \"\", token: null, line: this.yylineno});\n        }\n    },\nlex:function lex() {\n        var r = this.next();\n        if (typeof r !== 'undefined') {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\npopState:function popState() {\n        return this.conditionStack.pop();\n    },\n_currentRules:function _currentRules() {\n        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n    },\ntopState:function () {\n        return this.conditionStack[this.conditionStack.length-2];\n    },\npushState:function begin(condition) {\n        this.begin(condition);\n    }});\nlexer.options = {};\nlexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\n\nvar YYSTATE=YY_START\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 6\nbreak;\ncase 2:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 4\nbreak;\ncase 3:return 17\nbreak;\ncase 4:return 18\nbreak;\ncase 5:return 23\nbreak;\ncase 6:return 24\nbreak;\ncase 7:return 22\nbreak;\ncase 8:return 21\nbreak;\ncase 9:return 10\nbreak;\ncase 10:return 11\nbreak;\ncase 11:return 8\nbreak;\ncase 12:return 14\nbreak;\ncase 13:return 'INVALID'\nbreak;\n}\n};\nlexer.rules = [/^(?:\\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\\.[0-9]+)?([eE][-+]?[0-9]+)?\\b)/,/^(?:\"(?:\\\\[\\\\\"bfnrt/]|\\\\u[a-fA-F0-9]{4}|[^\\\\\\0-\\x09\\x0a-\\x1f\"])*\")/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?::)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:.)/];\nlexer.conditions = {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}};\n\n\n;\nreturn lexer;})()\nparser.lexer = lexer;\nreturn parser;\n})();\n\n// TANGIBLE: CHANGED\n\n// if (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n// exports.parser = jsonlint;\n// exports.parse = function () { return jsonlint.parse.apply(jsonlint, arguments); }\n// exports.main = function commonjsMain(args) {\n//     if (!args[1])\n//         throw new Error('Usage: '+args[0]+' FILE');\n//     if (typeof process !== 'undefined') {\n//         var source = require('fs').readFileSync(require('path').join(process.cwd(), args[1]), \"utf8\");\n//     } else {\n//         var cwd = require(\"file\").path(require(\"file\").cwd());\n//         var source = cwd.join(args[1]).read({charset: \"utf-8\"});\n//     }\n//     return exports.parser.parse(source);\n// }\n// if (typeof module !== 'undefined' && require.main === module) {\n//   exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require(\"system\").args);\n// }\n// }\n\nif (typeof window!=='undefined') window.jsonlint = jsonlint\nif (typeof module!=='undefined' && module.exports) module.exports = jsonlint\n","// Forked to export as window and/or module - See bottom\n// Original in /vendor/jsonlint.js\n\n/* Jison generated parser */\nvar jsonlint = (function(){\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"JSONString\":3,\"STRING\":4,\"JSONNumber\":5,\"NUMBER\":6,\"JSONNullLiteral\":7,\"NULL\":8,\"JSONBooleanLiteral\":9,\"TRUE\":10,\"FALSE\":11,\"JSONText\":12,\"JSONValue\":13,\"EOF\":14,\"JSONObject\":15,\"JSONArray\":16,\"{\":17,\"}\":18,\"JSONMemberList\":19,\"JSONMember\":20,\":\":21,\",\":22,\"[\":23,\"]\":24,\"JSONElementList\":25,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"STRING\",6:\"NUMBER\",8:\"NULL\",10:\"TRUE\",11:\"FALSE\",14:\"EOF\",17:\"{\",18:\"}\",21:\":\",22:\",\",23:\"[\",24:\"]\"},\nproductions_: [0,[3,1],[5,1],[7,1],[9,1],[9,1],[12,2],[13,1],[13,1],[13,1],[13,1],[13,1],[13,1],[15,2],[15,3],[20,3],[19,1],[19,3],[16,2],[16,3],[25,1],[25,3]],\nperformAction: function anonymous(yytext,yyleng,yylineno,yy,yystate,$$,_$) {\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: // replace escaped characters with actual character\n          this.$ = yytext.replace(/\\\\(\\\\|\")/g, \"$\"+\"1\")\n                     .replace(/\\\\n/g,'\\n')\n                     .replace(/\\\\r/g,'\\r')\n                     .replace(/\\\\t/g,'\\t')\n                     .replace(/\\\\v/g,'\\v')\n                     .replace(/\\\\f/g,'\\f')\n                     .replace(/\\\\b/g,'\\b');\n\nbreak;\ncase 2:this.$ = Number(yytext);\nbreak;\ncase 3:this.$ = null;\nbreak;\ncase 4:this.$ = true;\nbreak;\ncase 5:this.$ = false;\nbreak;\ncase 6:return this.$ = $$[$0-1];\nbreak;\ncase 13:this.$ = {};\nbreak;\ncase 14:this.$ = $$[$0-1];\nbreak;\ncase 15:this.$ = [$$[$0-2], $$[$0]];\nbreak;\ncase 16:this.$ = {}; this.$[$$[$0][0]] = $$[$0][1];\nbreak;\ncase 17:this.$ = $$[$0-2]; $$[$0-2][$$[$0][0]] = $$[$0][1];\nbreak;\ncase 18:this.$ = [];\nbreak;\ncase 19:this.$ = $$[$0-1];\nbreak;\ncase 20:this.$ = [$$[$0]];\nbreak;\ncase 21:this.$ = $$[$0-2]; $$[$0-2].push($$[$0]);\nbreak;\n}\n},\ntable: [{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],12:1,13:2,15:7,16:8,17:[1,14],23:[1,15]},{1:[3]},{14:[1,16]},{14:[2,7],18:[2,7],22:[2,7],24:[2,7]},{14:[2,8],18:[2,8],22:[2,8],24:[2,8]},{14:[2,9],18:[2,9],22:[2,9],24:[2,9]},{14:[2,10],18:[2,10],22:[2,10],24:[2,10]},{14:[2,11],18:[2,11],22:[2,11],24:[2,11]},{14:[2,12],18:[2,12],22:[2,12],24:[2,12]},{14:[2,3],18:[2,3],22:[2,3],24:[2,3]},{14:[2,4],18:[2,4],22:[2,4],24:[2,4]},{14:[2,5],18:[2,5],22:[2,5],24:[2,5]},{14:[2,1],18:[2,1],21:[2,1],22:[2,1],24:[2,1]},{14:[2,2],18:[2,2],22:[2,2],24:[2,2]},{3:20,4:[1,12],18:[1,17],19:18,20:19},{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],13:23,15:7,16:8,17:[1,14],23:[1,15],24:[1,21],25:22},{1:[2,6]},{14:[2,13],18:[2,13],22:[2,13],24:[2,13]},{18:[1,24],22:[1,25]},{18:[2,16],22:[2,16]},{21:[1,26]},{14:[2,18],18:[2,18],22:[2,18],24:[2,18]},{22:[1,28],24:[1,27]},{22:[2,20],24:[2,20]},{14:[2,14],18:[2,14],22:[2,14],24:[2,14]},{3:20,4:[1,12],20:29},{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],13:30,15:7,16:8,17:[1,14],23:[1,15]},{14:[2,19],18:[2,19],22:[2,19],24:[2,19]},{3:5,4:[1,12],5:6,6:[1,13],7:3,8:[1,9],9:4,10:[1,10],11:[1,11],13:31,15:7,16:8,17:[1,14],23:[1,15]},{18:[2,17],22:[2,17]},{18:[2,15],22:[2,15]},{22:[2,21],24:[2,21]}],\ndefaultActions: {16:[2,6]},\nparseError: function parseError(str, hash) {\n    throw new Error(str);\n},\nparse: function parse(input) {\n    var self = this,\n        stack = [0],\n        vstack = [null], // semantic value stack\n        lstack = [], // location stack\n        table = this.table,\n        yytext = '',\n        yylineno = 0,\n        yyleng = 0,\n        recovering = 0,\n        TERROR = 2,\n        EOF = 1;\n\n    //this.reductionCount = this.shiftCount = 0;\n\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    if (typeof this.lexer.yylloc == 'undefined')\n        this.lexer.yylloc = {};\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n\n    if (typeof this.yy.parseError === 'function')\n        this.parseError = this.yy.parseError;\n\n    function popStack (n) {\n        stack.length = stack.length - 2*n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n\n    function lex() {\n        var token;\n        token = self.lexer.lex() || 1; // $end = 1\n        // if token isn't its numeric value, convert\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n\n    var symbol, preErrorSymbol, state, action, a, r, yyval={},p,len,newState, expected;\n    while (true) {\n        // retreive state number from top of stack\n        state = stack[stack.length-1];\n\n        // use default actions if available\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol == null)\n                symbol = lex();\n            // read action for current state and first input\n            action = table[state] && table[state][symbol];\n        }\n\n        // handle parse error\n        _handle_error:\n        if (typeof action === 'undefined' || !action.length || !action[0]) {\n\n            if (!recovering) {\n                // Report error\n                expected = [];\n                for (p in table[state]) if (this.terminals_[p] && p > 2) {\n                    expected.push(\"'\"+this.terminals_[p]+\"'\");\n                }\n                var errStr = '';\n                if (this.lexer.showPosition) {\n                    errStr = 'Parse error on line '+(yylineno+1)+\":\\n\"+this.lexer.showPosition()+\"\\nExpecting \"+expected.join(', ') + \", got '\" + this.terminals_[symbol]+ \"'\";\n                } else {\n                    errStr = 'Parse error on line '+(yylineno+1)+\": Unexpected \" +\n                                  (symbol == 1 /*EOF*/ ? \"end of input\" :\n                                              (\"'\"+(this.terminals_[symbol] || symbol)+\"'\"));\n                }\n                this.parseError(errStr,\n                    {text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected});\n            }\n\n            // just recovered from another error\n            if (recovering == 3) {\n                if (symbol == EOF) {\n                    throw new Error(errStr || 'Parsing halted.');\n                }\n\n                // discard current lookahead and grab another\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                symbol = lex();\n            }\n\n            // try to recover from error\n            while (1) {\n                // check for error recovery rule in this state\n                if ((TERROR.toString()) in table[state]) {\n                    break;\n                }\n                if (state == 0) {\n                    throw new Error(errStr || 'Parsing halted.');\n                }\n                popStack(1);\n                state = stack[stack.length-1];\n            }\n\n            preErrorSymbol = symbol; // save the lookahead token\n            symbol = TERROR;         // insert generic error symbol as new lookahead\n            state = stack[stack.length-1];\n            action = table[state] && table[state][TERROR];\n            recovering = 3; // allow 3 real symbols to be shifted before reporting a new error\n        }\n\n        // this shouldn't happen, unless resolve defaults are off\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: '+state+', token: '+symbol);\n        }\n\n        switch (action[0]) {\n\n            case 1: // shift\n                //this.shiftCount++;\n\n                stack.push(symbol);\n                vstack.push(this.lexer.yytext);\n                lstack.push(this.lexer.yylloc);\n                stack.push(action[1]); // push state\n                symbol = null;\n                if (!preErrorSymbol) { // normal execution/no error\n                    yyleng = this.lexer.yyleng;\n                    yytext = this.lexer.yytext;\n                    yylineno = this.lexer.yylineno;\n                    yyloc = this.lexer.yylloc;\n                    if (recovering > 0)\n                        recovering--;\n                } else { // error just occurred, resume old lookahead f/ before error\n                    symbol = preErrorSymbol;\n                    preErrorSymbol = null;\n                }\n                break;\n\n            case 2: // reduce\n                //this.reductionCount++;\n\n                len = this.productions_[action[1]][1];\n\n                // perform semantic action\n                yyval.$ = vstack[vstack.length-len]; // default to $$ = $1\n                // default location, uses first token for firsts, last for lasts\n                yyval._$ = {\n                    first_line: lstack[lstack.length-(len||1)].first_line,\n                    last_line: lstack[lstack.length-1].last_line,\n                    first_column: lstack[lstack.length-(len||1)].first_column,\n                    last_column: lstack[lstack.length-1].last_column\n                };\n                r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n\n                if (typeof r !== 'undefined') {\n                    return r;\n                }\n\n                // pop off stack\n                if (len) {\n                    stack = stack.slice(0,-1*len*2);\n                    vstack = vstack.slice(0, -1*len);\n                    lstack = lstack.slice(0, -1*len);\n                }\n\n                stack.push(this.productions_[action[1]][0]);    // push nonterminal (reduce)\n                vstack.push(yyval.$);\n                lstack.push(yyval._$);\n                // goto new state = table[STATE][NONTERMINAL]\n                newState = table[stack[stack.length-2]][stack[stack.length-1]];\n                stack.push(newState);\n                break;\n\n            case 3: // accept\n                return true;\n        }\n\n    }\n\n    return true;\n}};\n/* Jison generated lexer */\nvar lexer = (function(){\nvar lexer = ({EOF:1,\nparseError:function parseError(str, hash) {\n        if (this.yy.parseError) {\n            this.yy.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._less = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {first_line:1,first_column:0,last_line:1,last_column:0};\n        return this;\n    },\ninput:function () {\n        var ch = this._input[0];\n        this.yytext+=ch;\n        this.yyleng++;\n        this.match+=ch;\n        this.matched+=ch;\n        var lines = ch.match(/\\n/);\n        if (lines) this.yylineno++;\n        this._input = this._input.slice(1);\n        return ch;\n    },\nunput:function (ch) {\n        this._input = ch + this._input;\n        return this;\n    },\nmore:function () {\n        this._more = true;\n        return this;\n    },\nless:function (n) {\n        this._input = this.match.slice(n) + this._input;\n    },\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20)+(next.length > 20 ? '...':'')).replace(/\\n/g, \"\");\n    },\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c+\"^\";\n    },\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) this.done = true;\n\n        var token,\n            match,\n            tempMatch,\n            index,\n            col,\n            lines;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i=0;i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (!this.options.flex) break;\n            }\n        }\n        if (match) {\n            lines = match[0].match(/\\n.*/g);\n            if (lines) this.yylineno += lines.length;\n            this.yylloc = {first_line: this.yylloc.last_line,\n                           last_line: this.yylineno+1,\n                           first_column: this.yylloc.last_column,\n                           last_column: lines ? lines[lines.length-1].length-1 : this.yylloc.last_column + match[0].length}\n            this.yytext += match[0];\n            this.match += match[0];\n            this.yyleng = this.yytext.length;\n            this._more = false;\n            this._input = this._input.slice(match[0].length);\n            this.matched += match[0];\n            token = this.performAction.call(this, this.yy, this, rules[index],this.conditionStack[this.conditionStack.length-1]);\n            if (this.done && this._input) this.done = false;\n            if (token) return token;\n            else return;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            this.parseError('Lexical error on line '+(this.yylineno+1)+'. Unrecognized text.\\n'+this.showPosition(),\n                    {text: \"\", token: null, line: this.yylineno});\n        }\n    },\nlex:function lex() {\n        var r = this.next();\n        if (typeof r !== 'undefined') {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\npopState:function popState() {\n        return this.conditionStack.pop();\n    },\n_currentRules:function _currentRules() {\n        return this.conditions[this.conditionStack[this.conditionStack.length-1]].rules;\n    },\ntopState:function () {\n        return this.conditionStack[this.conditionStack.length-2];\n    },\npushState:function begin(condition) {\n        this.begin(condition);\n    }});\nlexer.options = {};\nlexer.performAction = function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\n\nvar YYSTATE=YY_START\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:return 6\nbreak;\ncase 2:yy_.yytext = yy_.yytext.substr(1,yy_.yyleng-2); return 4\nbreak;\ncase 3:return 17\nbreak;\ncase 4:return 18\nbreak;\ncase 5:return 23\nbreak;\ncase 6:return 24\nbreak;\ncase 7:return 22\nbreak;\ncase 8:return 21\nbreak;\ncase 9:return 10\nbreak;\ncase 10:return 11\nbreak;\ncase 11:return 8\nbreak;\ncase 12:return 14\nbreak;\ncase 13:return 'INVALID'\nbreak;\n}\n};\nlexer.rules = [/^(?:\\s+)/,/^(?:(-?([0-9]|[1-9][0-9]+))(\\.[0-9]+)?([eE][-+]?[0-9]+)?\\b)/,/^(?:\"(?:\\\\[\\\\\"bfnrt/]|\\\\u[a-fA-F0-9]{4}|[^\\\\\\0-\\x09\\x0a-\\x1f\"])*\")/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\[)/,/^(?:\\])/,/^(?:,)/,/^(?::)/,/^(?:true\\b)/,/^(?:false\\b)/,/^(?:null\\b)/,/^(?:$)/,/^(?:.)/];\nlexer.conditions = {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}};\n\n\n;\nreturn lexer;})()\nparser.lexer = lexer;\nreturn parser;\n})();\n\n// TANGIBLE: CHANGED\n\n// if (typeof require !== 'undefined' && typeof exports !== 'undefined') {\n// exports.parser = jsonlint;\n// exports.parse = function () { return jsonlint.parse.apply(jsonlint, arguments); }\n// exports.main = function commonjsMain(args) {\n//     if (!args[1])\n//         throw new Error('Usage: '+args[0]+' FILE');\n//     if (typeof process !== 'undefined') {\n//         var source = require('fs').readFileSync(require('path').join(process.cwd(), args[1]), \"utf8\");\n//     } else {\n//         var cwd = require(\"file\").path(require(\"file\").cwd());\n//         var source = cwd.join(args[1]).read({charset: \"utf-8\"});\n//     }\n//     return exports.parser.parse(source);\n// }\n// if (typeof module !== 'undefined' && require.main === module) {\n//   exports.main(typeof process !== 'undefined' ? process.argv.slice(1) : require(\"system\").args);\n// }\n// }\n\nif (typeof window!=='undefined') window.jsonlint = jsonlint\nif (typeof module!=='undefined' && module.exports) module.exports = jsonlint\n"]}